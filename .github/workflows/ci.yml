name: ci
on:
  push:
  pull_request:

# cancel older runs on the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python:
    name: Python checks
    # only run if we detect a Python project file
    if: ${{ hashFiles('**/pyproject.toml', '**/requirements.txt') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps (uv preferred; falls back to pip)
        run: |
          python -m pip install --upgrade pip
          pip install uv || true
          if [ -f "pyproject.toml" ]; then
            uv pip install -e . || uv pip install -r requirements.txt || true
          elif [ -f "requirements.txt" ]; then
            uv pip install -r requirements.txt || pip install -r requirements.txt
          fi
          pip install ruff black mypy pytest || true
      - name: Lint & format
        run: |
          ruff check . || true
          black --check . || true
      - name: Type check
        run: |
          if [ -f "pyproject.toml" ] || [ -f "mypy.ini" ] || [ -f ".mypy.ini" ]; then
            mypy . || true
          else
            echo "Skipping mypy (no config found)."
          fi
      - name: Tests
        run: |
          if ls -1 **/test_*.py **/*_test.py 2>/dev/null; then
            pytest -q
          else
            echo "No Python tests found."
          fi

  node:
    name: Node checks
    # only run if we detect a Node project
    if: ${{ hashFiles('**/package.json') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install
        run: pnpm install --frozen-lockfile || pnpm install || npm install
      - name: Lint
        run: |
          if [ -f "eslint.config.js" ] || [ -f ".eslintrc.js" ] || [ -f ".eslintrc.cjs" ] || [ -f ".eslintrc.json" ]; then
            pnpm eslint . || npm run lint || true
          else
            echo "Skipping eslint (no config)."
          fi
      - name: Type check
        run: |
          if [ -f "tsconfig.json" ]; then
            npx tsc --noEmit || true
          else
            echo "Skipping tsc (no tsconfig)."
          fi
      - name: Tests
        run: |
          if [ -f "vitest.config.ts" ] || [ -f "vitest.config.js" ] || [ -d "test" ] || [ -d "__tests__" ]; then
            pnpm vitest run --reporter=dot || npm test || true
          else
            echo "No Node tests found."
          fi